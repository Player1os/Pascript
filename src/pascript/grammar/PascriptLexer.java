// Generated from src/pascript/grammar/Pascript.g4 by ANTLR 4.4

package pascript.grammar;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class PascriptLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		LINE_COMMENT=1, BLOCK_COMMENT=2, NEWLINE=3, WHITESPACE=4, MODULE_BEGIN=5, 
		MODULE_END=6, EXTERNAL_SECTION_BEGIN=7, EXTERNAL_SECTION_END=8, VARIABLE_SECTION_BEGIN=9, 
		VARIABLE_SECTION_END=10, FUNCTION_SECTION_BEGIN=11, FUNCTION_SECTION_END=12, 
		MAIN_SECTION_BEGIN=13, MAIN_SECTION_END=14, COMMA=15, DOT=16, END_STATEMENT=17, 
		PAREN_OPEN=18, PAREN_CLOSE=19, SQUARE_OPEN=20, SQUARE_CLOSE=21, CURLY_OPEN=22, 
		CURLY_CLOSE=23, PRINT=24, READ=25, DELETE=26, RETURN=27, IF=28, ELSE=29, 
		WHILE=30, DO=31, FOR=32, MULTIPLY=33, DIVIDE=34, MODULO=35, INCREMENT=36, 
		DECREMENT=37, ADD=38, SUBTRACT=39, AND=40, OR=41, XOR=42, NOT=43, LESS_OR_EQUAL=44, 
		GREATER_OR_EQUAL=45, LESS=46, GREATER=47, EQUAL=48, NOT_EQUAL=49, ASSIGN=50, 
		VOID_DATATYPE=51, BOOLEAN_DATATYPE=52, INTEGER_DATATYPE=53, FLOAT_DATATYPE=54, 
		STRING_DATATYPE=55, STRING=56, FLOAT=57, INTEGER=58, TRUE=59, FALSE=60, 
		IDENTIFIER=61;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'", 
		"'2'", "'3'", "'4'", "'5'", "'6'", "'7'", "'8'", "'9'", "':'", "';'", 
		"'<'", "'='"
	};
	public static final String[] ruleNames = {
		"LINE_COMMENT", "BLOCK_COMMENT", "NEWLINE", "WHITESPACE", "MODULE_BEGIN", 
		"MODULE_END", "EXTERNAL_SECTION_BEGIN", "EXTERNAL_SECTION_END", "VARIABLE_SECTION_BEGIN", 
		"VARIABLE_SECTION_END", "FUNCTION_SECTION_BEGIN", "FUNCTION_SECTION_END", 
		"MAIN_SECTION_BEGIN", "MAIN_SECTION_END", "COMMA", "DOT", "END_STATEMENT", 
		"PAREN_OPEN", "PAREN_CLOSE", "SQUARE_OPEN", "SQUARE_CLOSE", "CURLY_OPEN", 
		"CURLY_CLOSE", "PRINT", "READ", "DELETE", "RETURN", "IF", "ELSE", "WHILE", 
		"DO", "FOR", "MULTIPLY", "DIVIDE", "MODULO", "INCREMENT", "DECREMENT", 
		"ADD", "SUBTRACT", "AND", "OR", "XOR", "NOT", "LESS_OR_EQUAL", "GREATER_OR_EQUAL", 
		"LESS", "GREATER", "EQUAL", "NOT_EQUAL", "ASSIGN", "VOID_DATATYPE", "BOOLEAN_DATATYPE", 
		"INTEGER_DATATYPE", "FLOAT_DATATYPE", "STRING_DATATYPE", "STRING", "FLOAT", 
		"INTEGER", "TRUE", "FALSE", "IDENTIFIER"
	};


	public PascriptLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Pascript.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2?\u01c0\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\3\2\3\2\3\2\3\2\7\2\u0082\n\2\f\2\16\2\u0085\13\2\3\2\6\2\u0088"+
		"\n\2\r\2\16\2\u0089\3\2\3\2\3\3\3\3\3\3\3\3\7\3\u0092\n\3\f\3\16\3\u0095"+
		"\13\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\6\3\6\3\6"+
		"\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3"+
		"\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t"+
		"\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13"+
		"\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f"+
		"\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3"+
		"\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3"+
		"\17\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25\3"+
		"\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\32\3\33\3\33\3"+
		"\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3"+
		"\35\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3"+
		"!\3!\3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3%\3&\3&\3&\3\'\3\'\3(\3(\3)\3)\3"+
		"*\3*\3+\3+\3,\3,\3-\3-\3-\3.\3.\3.\3/\3/\3\60\3\60\3\61\3\61\3\61\3\62"+
		"\3\62\3\62\3\63\3\63\3\64\3\64\3\64\3\64\3\64\3\65\3\65\3\65\3\65\3\65"+
		"\3\66\3\66\3\66\3\66\3\67\3\67\3\67\3\67\3\67\3\67\38\38\38\38\38\38\3"+
		"8\39\39\79\u018d\n9\f9\169\u0190\139\39\39\3:\3:\3:\7:\u0197\n:\f:\16"+
		":\u019a\13:\5:\u019c\n:\3:\3:\7:\u01a0\n:\f:\16:\u01a3\13:\3;\3;\3;\7"+
		";\u01a8\n;\f;\16;\u01ab\13;\5;\u01ad\n;\3<\3<\3<\3<\3<\3=\3=\3=\3=\3="+
		"\3=\3>\3>\7>\u01bc\n>\f>\16>\u01bf\13>\5\u0083\u0093\u018e\2?\3\3\5\4"+
		"\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22"+
		"#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C"+
		"#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w"+
		"=y>{?\3\2\b\4\2\f\f\17\17\4\2\13\13\"\"\3\2\63;\3\2\62;\4\2aac|\5\2\62"+
		";aac|\u01c9\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2"+
		"\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27"+
		"\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2"+
		"\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2"+
		"\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2"+
		"\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2"+
		"\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S"+
		"\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2"+
		"\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2"+
		"\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y"+
		"\3\2\2\2\2{\3\2\2\2\3}\3\2\2\2\5\u008d\3\2\2\2\7\u009b\3\2\2\2\t\u009f"+
		"\3\2\2\2\13\u00a3\3\2\2\2\r\u00ac\3\2\2\2\17\u00b6\3\2\2\2\21\u00c1\3"+
		"\2\2\2\23\u00cd\3\2\2\2\25\u00d8\3\2\2\2\27\u00e4\3\2\2\2\31\u00ef\3\2"+
		"\2\2\33\u00fb\3\2\2\2\35\u0102\3\2\2\2\37\u010a\3\2\2\2!\u010c\3\2\2\2"+
		"#\u010e\3\2\2\2%\u0110\3\2\2\2\'\u0112\3\2\2\2)\u0114\3\2\2\2+\u0116\3"+
		"\2\2\2-\u0118\3\2\2\2/\u011a\3\2\2\2\61\u011c\3\2\2\2\63\u011f\3\2\2\2"+
		"\65\u0122\3\2\2\2\67\u0129\3\2\2\29\u0130\3\2\2\2;\u0133\3\2\2\2=\u0138"+
		"\3\2\2\2?\u013e\3\2\2\2A\u0141\3\2\2\2C\u0145\3\2\2\2E\u0147\3\2\2\2G"+
		"\u0149\3\2\2\2I\u014b\3\2\2\2K\u014e\3\2\2\2M\u0151\3\2\2\2O\u0153\3\2"+
		"\2\2Q\u0155\3\2\2\2S\u0157\3\2\2\2U\u0159\3\2\2\2W\u015b\3\2\2\2Y\u015d"+
		"\3\2\2\2[\u0160\3\2\2\2]\u0163\3\2\2\2_\u0165\3\2\2\2a\u0167\3\2\2\2c"+
		"\u016a\3\2\2\2e\u016d\3\2\2\2g\u016f\3\2\2\2i\u0174\3\2\2\2k\u0179\3\2"+
		"\2\2m\u017d\3\2\2\2o\u0183\3\2\2\2q\u018a\3\2\2\2s\u019b\3\2\2\2u\u01ac"+
		"\3\2\2\2w\u01ae\3\2\2\2y\u01b3\3\2\2\2{\u01b9\3\2\2\2}~\7\61\2\2~\177"+
		"\7\61\2\2\177\u0083\3\2\2\2\u0080\u0082\13\2\2\2\u0081\u0080\3\2\2\2\u0082"+
		"\u0085\3\2\2\2\u0083\u0084\3\2\2\2\u0083\u0081\3\2\2\2\u0084\u0087\3\2"+
		"\2\2\u0085\u0083\3\2\2\2\u0086\u0088\5\7\4\2\u0087\u0086\3\2\2\2\u0088"+
		"\u0089\3\2\2\2\u0089\u0087\3\2\2\2\u0089\u008a\3\2\2\2\u008a\u008b\3\2"+
		"\2\2\u008b\u008c\b\2\2\2\u008c\4\3\2\2\2\u008d\u008e\7\61\2\2\u008e\u008f"+
		"\7,\2\2\u008f\u0093\3\2\2\2\u0090\u0092\13\2\2\2\u0091\u0090\3\2\2\2\u0092"+
		"\u0095\3\2\2\2\u0093\u0094\3\2\2\2\u0093\u0091\3\2\2\2\u0094\u0096\3\2"+
		"\2\2\u0095\u0093\3\2\2\2\u0096\u0097\7,\2\2\u0097\u0098\7\61\2\2\u0098"+
		"\u0099\3\2\2\2\u0099\u009a\b\3\2\2\u009a\6\3\2\2\2\u009b\u009c\t\2\2\2"+
		"\u009c\u009d\3\2\2\2\u009d\u009e\b\4\2\2\u009e\b\3\2\2\2\u009f\u00a0\t"+
		"\3\2\2\u00a0\u00a1\3\2\2\2\u00a1\u00a2\b\5\2\2\u00a2\n\3\2\2\2\u00a3\u00a4"+
		"\7>\2\2\u00a4\u00a5\7o\2\2\u00a5\u00a6\7q\2\2\u00a6\u00a7\7f\2\2\u00a7"+
		"\u00a8\7w\2\2\u00a8\u00a9\7n\2\2\u00a9\u00aa\7g\2\2\u00aa\u00ab\7@\2\2"+
		"\u00ab\f\3\2\2\2\u00ac\u00ad\7>\2\2\u00ad\u00ae\7\61\2\2\u00ae\u00af\7"+
		"o\2\2\u00af\u00b0\7q\2\2\u00b0\u00b1\7f\2\2\u00b1\u00b2\7w\2\2\u00b2\u00b3"+
		"\7n\2\2\u00b3\u00b4\7g\2\2\u00b4\u00b5\7@\2\2\u00b5\16\3\2\2\2\u00b6\u00b7"+
		"\7>\2\2\u00b7\u00b8\7g\2\2\u00b8\u00b9\7z\2\2\u00b9\u00ba\7v\2\2\u00ba"+
		"\u00bb\7g\2\2\u00bb\u00bc\7t\2\2\u00bc\u00bd\7p\2\2\u00bd\u00be\7c\2\2"+
		"\u00be\u00bf\7n\2\2\u00bf\u00c0\7@\2\2\u00c0\20\3\2\2\2\u00c1\u00c2\7"+
		">\2\2\u00c2\u00c3\7\61\2\2\u00c3\u00c4\7g\2\2\u00c4\u00c5\7z\2\2\u00c5"+
		"\u00c6\7v\2\2\u00c6\u00c7\7g\2\2\u00c7\u00c8\7t\2\2\u00c8\u00c9\7p\2\2"+
		"\u00c9\u00ca\7c\2\2\u00ca\u00cb\7n\2\2\u00cb\u00cc\7@\2\2\u00cc\22\3\2"+
		"\2\2\u00cd\u00ce\7>\2\2\u00ce\u00cf\7x\2\2\u00cf\u00d0\7c\2\2\u00d0\u00d1"+
		"\7t\2\2\u00d1\u00d2\7k\2\2\u00d2\u00d3\7c\2\2\u00d3\u00d4\7d\2\2\u00d4"+
		"\u00d5\7n\2\2\u00d5\u00d6\7g\2\2\u00d6\u00d7\7@\2\2\u00d7\24\3\2\2\2\u00d8"+
		"\u00d9\7>\2\2\u00d9\u00da\7\61\2\2\u00da\u00db\7x\2\2\u00db\u00dc\7c\2"+
		"\2\u00dc\u00dd\7t\2\2\u00dd\u00de\7k\2\2\u00de\u00df\7c\2\2\u00df\u00e0"+
		"\7d\2\2\u00e0\u00e1\7n\2\2\u00e1\u00e2\7g\2\2\u00e2\u00e3\7@\2\2\u00e3"+
		"\26\3\2\2\2\u00e4\u00e5\7>\2\2\u00e5\u00e6\7h\2\2\u00e6\u00e7\7w\2\2\u00e7"+
		"\u00e8\7p\2\2\u00e8\u00e9\7e\2\2\u00e9\u00ea\7v\2\2\u00ea\u00eb\7k\2\2"+
		"\u00eb\u00ec\7q\2\2\u00ec\u00ed\7p\2\2\u00ed\u00ee\7@\2\2\u00ee\30\3\2"+
		"\2\2\u00ef\u00f0\7>\2\2\u00f0\u00f1\7\61\2\2\u00f1\u00f2\7h\2\2\u00f2"+
		"\u00f3\7w\2\2\u00f3\u00f4\7p\2\2\u00f4\u00f5\7e\2\2\u00f5\u00f6\7v\2\2"+
		"\u00f6\u00f7\7k\2\2\u00f7\u00f8\7q\2\2\u00f8\u00f9\7p\2\2\u00f9\u00fa"+
		"\7@\2\2\u00fa\32\3\2\2\2\u00fb\u00fc\7>\2\2\u00fc\u00fd\7o\2\2\u00fd\u00fe"+
		"\7c\2\2\u00fe\u00ff\7k\2\2\u00ff\u0100\7p\2\2\u0100\u0101\7@\2\2\u0101"+
		"\34\3\2\2\2\u0102\u0103\7>\2\2\u0103\u0104\7\61\2\2\u0104\u0105\7o\2\2"+
		"\u0105\u0106\7c\2\2\u0106\u0107\7k\2\2\u0107\u0108\7p\2\2\u0108\u0109"+
		"\7@\2\2\u0109\36\3\2\2\2\u010a\u010b\7.\2\2\u010b \3\2\2\2\u010c\u010d"+
		"\7\60\2\2\u010d\"\3\2\2\2\u010e\u010f\7=\2\2\u010f$\3\2\2\2\u0110\u0111"+
		"\7*\2\2\u0111&\3\2\2\2\u0112\u0113\7+\2\2\u0113(\3\2\2\2\u0114\u0115\7"+
		"]\2\2\u0115*\3\2\2\2\u0116\u0117\7_\2\2\u0117,\3\2\2\2\u0118\u0119\7}"+
		"\2\2\u0119.\3\2\2\2\u011a\u011b\7\177\2\2\u011b\60\3\2\2\2\u011c\u011d"+
		"\7>\2\2\u011d\u011e\7/\2\2\u011e\62\3\2\2\2\u011f\u0120\7/\2\2\u0120\u0121"+
		"\7@\2\2\u0121\64\3\2\2\2\u0122\u0123\7f\2\2\u0123\u0124\7g\2\2\u0124\u0125"+
		"\7n\2\2\u0125\u0126\7g\2\2\u0126\u0127\7v\2\2\u0127\u0128\7g\2\2\u0128"+
		"\66\3\2\2\2\u0129\u012a\7t\2\2\u012a\u012b\7g\2\2\u012b\u012c\7v\2\2\u012c"+
		"\u012d\7w\2\2\u012d\u012e\7t\2\2\u012e\u012f\7p\2\2\u012f8\3\2\2\2\u0130"+
		"\u0131\7k\2\2\u0131\u0132\7h\2\2\u0132:\3\2\2\2\u0133\u0134\7g\2\2\u0134"+
		"\u0135\7n\2\2\u0135\u0136\7u\2\2\u0136\u0137\7g\2\2\u0137<\3\2\2\2\u0138"+
		"\u0139\7y\2\2\u0139\u013a\7j\2\2\u013a\u013b\7k\2\2\u013b\u013c\7n\2\2"+
		"\u013c\u013d\7g\2\2\u013d>\3\2\2\2\u013e\u013f\7f\2\2\u013f\u0140\7q\2"+
		"\2\u0140@\3\2\2\2\u0141\u0142\7h\2\2\u0142\u0143\7q\2\2\u0143\u0144\7"+
		"t\2\2\u0144B\3\2\2\2\u0145\u0146\7,\2\2\u0146D\3\2\2\2\u0147\u0148\7\61"+
		"\2\2\u0148F\3\2\2\2\u0149\u014a\7\'\2\2\u014aH\3\2\2\2\u014b\u014c\7-"+
		"\2\2\u014c\u014d\7-\2\2\u014dJ\3\2\2\2\u014e\u014f\7/\2\2\u014f\u0150"+
		"\7/\2\2\u0150L\3\2\2\2\u0151\u0152\7-\2\2\u0152N\3\2\2\2\u0153\u0154\7"+
		"/\2\2\u0154P\3\2\2\2\u0155\u0156\7(\2\2\u0156R\3\2\2\2\u0157\u0158\7~"+
		"\2\2\u0158T\3\2\2\2\u0159\u015a\7`\2\2\u015aV\3\2\2\2\u015b\u015c\7#\2"+
		"\2\u015cX\3\2\2\2\u015d\u015e\7>\2\2\u015e\u015f\7?\2\2\u015fZ\3\2\2\2"+
		"\u0160\u0161\7@\2\2\u0161\u0162\7?\2\2\u0162\\\3\2\2\2\u0163\u0164\7>"+
		"\2\2\u0164^\3\2\2\2\u0165\u0166\7@\2\2\u0166`\3\2\2\2\u0167\u0168\7?\2"+
		"\2\u0168\u0169\7?\2\2\u0169b\3\2\2\2\u016a\u016b\7#\2\2\u016b\u016c\7"+
		"?\2\2\u016cd\3\2\2\2\u016d\u016e\7?\2\2\u016ef\3\2\2\2\u016f\u0170\7x"+
		"\2\2\u0170\u0171\7q\2\2\u0171\u0172\7k\2\2\u0172\u0173\7f\2\2\u0173h\3"+
		"\2\2\2\u0174\u0175\7d\2\2\u0175\u0176\7q\2\2\u0176\u0177\7q\2\2\u0177"+
		"\u0178\7n\2\2\u0178j\3\2\2\2\u0179\u017a\7k\2\2\u017a\u017b\7p\2\2\u017b"+
		"\u017c\7v\2\2\u017cl\3\2\2\2\u017d\u017e\7h\2\2\u017e\u017f\7n\2\2\u017f"+
		"\u0180\7q\2\2\u0180\u0181\7c\2\2\u0181\u0182\7v\2\2\u0182n\3\2\2\2\u0183"+
		"\u0184\7u\2\2\u0184\u0185\7v\2\2\u0185\u0186\7t\2\2\u0186\u0187\7k\2\2"+
		"\u0187\u0188\7p\2\2\u0188\u0189\7i\2\2\u0189p\3\2\2\2\u018a\u018e\7$\2"+
		"\2\u018b\u018d\n\2\2\2\u018c\u018b\3\2\2\2\u018d\u0190\3\2\2\2\u018e\u018f"+
		"\3\2\2\2\u018e\u018c\3\2\2\2\u018f\u0191\3\2\2\2\u0190\u018e\3\2\2\2\u0191"+
		"\u0192\7$\2\2\u0192r\3\2\2\2\u0193\u019c\7\62\2\2\u0194\u0198\t\4\2\2"+
		"\u0195\u0197\t\5\2\2\u0196\u0195\3\2\2\2\u0197\u019a\3\2\2\2\u0198\u0196"+
		"\3\2\2\2\u0198\u0199\3\2\2\2\u0199\u019c\3\2\2\2\u019a\u0198\3\2\2\2\u019b"+
		"\u0193\3\2\2\2\u019b\u0194\3\2\2\2\u019c\u019d\3\2\2\2\u019d\u01a1\7\60"+
		"\2\2\u019e\u01a0\t\5\2\2\u019f\u019e\3\2\2\2\u01a0\u01a3\3\2\2\2\u01a1"+
		"\u019f\3\2\2\2\u01a1\u01a2\3\2\2\2\u01a2t\3\2\2\2\u01a3\u01a1\3\2\2\2"+
		"\u01a4\u01ad\7\62\2\2\u01a5\u01a9\t\4\2\2\u01a6\u01a8\t\5\2\2\u01a7\u01a6"+
		"\3\2\2\2\u01a8\u01ab\3\2\2\2\u01a9\u01a7\3\2\2\2\u01a9\u01aa\3\2\2\2\u01aa"+
		"\u01ad\3\2\2\2\u01ab\u01a9\3\2\2\2\u01ac\u01a4\3\2\2\2\u01ac\u01a5\3\2"+
		"\2\2\u01adv\3\2\2\2\u01ae\u01af\7v\2\2\u01af\u01b0\7t\2\2\u01b0\u01b1"+
		"\7w\2\2\u01b1\u01b2\7g\2\2\u01b2x\3\2\2\2\u01b3\u01b4\7h\2\2\u01b4\u01b5"+
		"\7c\2\2\u01b5\u01b6\7n\2\2\u01b6\u01b7\7u\2\2\u01b7\u01b8\7g\2\2\u01b8"+
		"z\3\2\2\2\u01b9\u01bd\t\6\2\2\u01ba\u01bc\t\7\2\2\u01bb\u01ba\3\2\2\2"+
		"\u01bc\u01bf\3\2\2\2\u01bd\u01bb\3\2\2\2\u01bd\u01be\3\2\2\2\u01be|\3"+
		"\2\2\2\u01bf\u01bd\3\2\2\2\r\2\u0083\u0089\u0093\u018e\u0198\u019b\u01a1"+
		"\u01a9\u01ac\u01bd\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}