// Generated from src/Pascript.g4 by ANTLR 4.2
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class PascriptLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		LINE_COMMENT=1, BLOCK_COMMENT=2, NEWLINE=3, WHITESPACE=4, EXTERNAL_SECTION=5, 
		VARIABLE_SECTION=6, FUNCTION_SECTION=7, MAIN_SECTION=8, COMMA=9, END_STATEMENT=10, 
		PAREN_OPEN=11, PAREN_CLOSE=12, SQUARE_OPEN=13, SQUARE_CLOSE=14, CURLY_OPEN=15, 
		CURLY_CLOSE=16, PRINT=17, READ=18, RETURN=19, IF=20, ELSE=21, WHILE=22, 
		DO=23, FOR=24, POWER=25, MULTIPLY=26, DIVIDE=27, MODULO=28, INCREMENT=29, 
		DECREMENT=30, ADD=31, SUBTRACT=32, SHIFT_LEFT=33, SHIFT_RIGHT=34, AND=35, 
		OR=36, XOR=37, NOT=38, LESS_OR_EQUAL=39, GREATER_OR_EQUAL=40, LESS=41, 
		GREATER=42, EQUAL=43, NOT_EQUAL=44, ASSIGN=45, VOID=46, BOOLEAN_DATATYPE=47, 
		INTEGER_DATATYPE=48, FLOAT_DATATYPE=49, STRING_DATATYPE=50, STRING=51, 
		FLOAT=52, INTEGER=53, TRUE=54, FALSE=55, IDENTIFIER=56;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"LINE_COMMENT", "BLOCK_COMMENT", "NEWLINE", "WHITESPACE", "'external:'", 
		"'variable:'", "'function:'", "'main:'", "','", "';'", "'('", "')'", "'['", 
		"']'", "'{'", "'}'", "'<-'", "'->'", "'return'", "'if'", "'else'", "'while'", 
		"'do'", "'for'", "'**'", "'*'", "'/'", "'%'", "'++'", "'--'", "'+'", "'-'", 
		"'<<'", "'>>'", "'&&'", "'||'", "'^^'", "'!'", "'<='", "'>='", "'<'", 
		"'>'", "'=='", "'!='", "'='", "'void'", "'bool'", "'int'", "'float'", 
		"'string'", "STRING", "FLOAT", "INTEGER", "'true'", "'false'", "IDENTIFIER"
	};
	public static final String[] ruleNames = {
		"LINE_COMMENT", "BLOCK_COMMENT", "NEWLINE", "WHITESPACE", "EXTERNAL_SECTION", 
		"VARIABLE_SECTION", "FUNCTION_SECTION", "MAIN_SECTION", "COMMA", "END_STATEMENT", 
		"PAREN_OPEN", "PAREN_CLOSE", "SQUARE_OPEN", "SQUARE_CLOSE", "CURLY_OPEN", 
		"CURLY_CLOSE", "PRINT", "READ", "RETURN", "IF", "ELSE", "WHILE", "DO", 
		"FOR", "POWER", "MULTIPLY", "DIVIDE", "MODULO", "INCREMENT", "DECREMENT", 
		"ADD", "SUBTRACT", "SHIFT_LEFT", "SHIFT_RIGHT", "AND", "OR", "XOR", "NOT", 
		"LESS_OR_EQUAL", "GREATER_OR_EQUAL", "LESS", "GREATER", "EQUAL", "NOT_EQUAL", 
		"ASSIGN", "VOID", "BOOLEAN_DATATYPE", "INTEGER_DATATYPE", "FLOAT_DATATYPE", 
		"STRING_DATATYPE", "STRING", "FLOAT", "INTEGER", "TRUE", "FALSE", "IDENTIFIER"
	};


	public PascriptLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Pascript.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2:\u0177\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\3\2\3\2\3\2\3\2\7\2x\n\2"+
		"\f\2\16\2{\13\2\3\2\7\2~\n\2\f\2\16\2\u0081\13\2\3\2\3\2\3\3\3\3\3\3\3"+
		"\3\7\3\u0089\n\3\f\3\16\3\u008c\13\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3"+
		"\4\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7"+
		"\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3"+
		"\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\17"+
		"\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\24"+
		"\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\27\3\27"+
		"\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\32\3\32\3\32"+
		"\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3\37\3 \3 \3!"+
		"\3!\3\"\3\"\3\"\3#\3#\3#\3$\3$\3$\3%\3%\3%\3&\3&\3&\3\'\3\'\3(\3(\3(\3"+
		")\3)\3)\3*\3*\3+\3+\3,\3,\3,\3-\3-\3-\3.\3.\3/\3/\3/\3/\3/\3\60\3\60\3"+
		"\60\3\60\3\60\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\62\3\62\3\62\3\63\3"+
		"\63\3\63\3\63\3\63\3\63\3\63\3\64\3\64\7\64\u0144\n\64\f\64\16\64\u0147"+
		"\13\64\3\64\3\64\3\65\3\65\3\65\7\65\u014e\n\65\f\65\16\65\u0151\13\65"+
		"\5\65\u0153\n\65\3\65\3\65\7\65\u0157\n\65\f\65\16\65\u015a\13\65\3\66"+
		"\3\66\3\66\7\66\u015f\n\66\f\66\16\66\u0162\13\66\5\66\u0164\n\66\3\67"+
		"\3\67\3\67\3\67\3\67\38\38\38\38\38\38\39\39\79\u0173\n9\f9\169\u0176"+
		"\139\5y\u008a\u0145\2:\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27"+
		"\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33"+
		"\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63"+
		"e\64g\65i\66k\67m8o9q:\3\2\b\4\2\f\f\17\17\4\2\13\13\"\"\3\2\63;\3\2\62"+
		";\4\2aac|\5\2\62;aac|\u0180\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3"+
		"\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2"+
		"\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37"+
		"\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3"+
		"\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2"+
		"\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C"+
		"\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2"+
		"\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2"+
		"\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i"+
		"\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\3s\3\2\2\2\5\u0084"+
		"\3\2\2\2\7\u0092\3\2\2\2\t\u0096\3\2\2\2\13\u009a\3\2\2\2\r\u00a4\3\2"+
		"\2\2\17\u00ae\3\2\2\2\21\u00b8\3\2\2\2\23\u00be\3\2\2\2\25\u00c0\3\2\2"+
		"\2\27\u00c2\3\2\2\2\31\u00c4\3\2\2\2\33\u00c6\3\2\2\2\35\u00c8\3\2\2\2"+
		"\37\u00ca\3\2\2\2!\u00cc\3\2\2\2#\u00ce\3\2\2\2%\u00d1\3\2\2\2\'\u00d4"+
		"\3\2\2\2)\u00db\3\2\2\2+\u00de\3\2\2\2-\u00e3\3\2\2\2/\u00e9\3\2\2\2\61"+
		"\u00ec\3\2\2\2\63\u00f0\3\2\2\2\65\u00f3\3\2\2\2\67\u00f5\3\2\2\29\u00f7"+
		"\3\2\2\2;\u00f9\3\2\2\2=\u00fc\3\2\2\2?\u00ff\3\2\2\2A\u0101\3\2\2\2C"+
		"\u0103\3\2\2\2E\u0106\3\2\2\2G\u0109\3\2\2\2I\u010c\3\2\2\2K\u010f\3\2"+
		"\2\2M\u0112\3\2\2\2O\u0114\3\2\2\2Q\u0117\3\2\2\2S\u011a\3\2\2\2U\u011c"+
		"\3\2\2\2W\u011e\3\2\2\2Y\u0121\3\2\2\2[\u0124\3\2\2\2]\u0126\3\2\2\2_"+
		"\u012b\3\2\2\2a\u0130\3\2\2\2c\u0134\3\2\2\2e\u013a\3\2\2\2g\u0141\3\2"+
		"\2\2i\u0152\3\2\2\2k\u0163\3\2\2\2m\u0165\3\2\2\2o\u016a\3\2\2\2q\u0170"+
		"\3\2\2\2st\7\61\2\2tu\7\61\2\2uy\3\2\2\2vx\13\2\2\2wv\3\2\2\2x{\3\2\2"+
		"\2yz\3\2\2\2yw\3\2\2\2z\177\3\2\2\2{y\3\2\2\2|~\5\7\4\2}|\3\2\2\2~\u0081"+
		"\3\2\2\2\177}\3\2\2\2\177\u0080\3\2\2\2\u0080\u0082\3\2\2\2\u0081\177"+
		"\3\2\2\2\u0082\u0083\b\2\2\2\u0083\4\3\2\2\2\u0084\u0085\7\61\2\2\u0085"+
		"\u0086\7,\2\2\u0086\u008a\3\2\2\2\u0087\u0089\13\2\2\2\u0088\u0087\3\2"+
		"\2\2\u0089\u008c\3\2\2\2\u008a\u008b\3\2\2\2\u008a\u0088\3\2\2\2\u008b"+
		"\u008d\3\2\2\2\u008c\u008a\3\2\2\2\u008d\u008e\7,\2\2\u008e\u008f\7\61"+
		"\2\2\u008f\u0090\3\2\2\2\u0090\u0091\b\3\2\2\u0091\6\3\2\2\2\u0092\u0093"+
		"\t\2\2\2\u0093\u0094\3\2\2\2\u0094\u0095\b\4\2\2\u0095\b\3\2\2\2\u0096"+
		"\u0097\t\3\2\2\u0097\u0098\3\2\2\2\u0098\u0099\b\5\2\2\u0099\n\3\2\2\2"+
		"\u009a\u009b\7g\2\2\u009b\u009c\7z\2\2\u009c\u009d\7v\2\2\u009d\u009e"+
		"\7g\2\2\u009e\u009f\7t\2\2\u009f\u00a0\7p\2\2\u00a0\u00a1\7c\2\2\u00a1"+
		"\u00a2\7n\2\2\u00a2\u00a3\7<\2\2\u00a3\f\3\2\2\2\u00a4\u00a5\7x\2\2\u00a5"+
		"\u00a6\7c\2\2\u00a6\u00a7\7t\2\2\u00a7\u00a8\7k\2\2\u00a8\u00a9\7c\2\2"+
		"\u00a9\u00aa\7d\2\2\u00aa\u00ab\7n\2\2\u00ab\u00ac\7g\2\2\u00ac\u00ad"+
		"\7<\2\2\u00ad\16\3\2\2\2\u00ae\u00af\7h\2\2\u00af\u00b0\7w\2\2\u00b0\u00b1"+
		"\7p\2\2\u00b1\u00b2\7e\2\2\u00b2\u00b3\7v\2\2\u00b3\u00b4\7k\2\2\u00b4"+
		"\u00b5\7q\2\2\u00b5\u00b6\7p\2\2\u00b6\u00b7\7<\2\2\u00b7\20\3\2\2\2\u00b8"+
		"\u00b9\7o\2\2\u00b9\u00ba\7c\2\2\u00ba\u00bb\7k\2\2\u00bb\u00bc\7p\2\2"+
		"\u00bc\u00bd\7<\2\2\u00bd\22\3\2\2\2\u00be\u00bf\7.\2\2\u00bf\24\3\2\2"+
		"\2\u00c0\u00c1\7=\2\2\u00c1\26\3\2\2\2\u00c2\u00c3\7*\2\2\u00c3\30\3\2"+
		"\2\2\u00c4\u00c5\7+\2\2\u00c5\32\3\2\2\2\u00c6\u00c7\7]\2\2\u00c7\34\3"+
		"\2\2\2\u00c8\u00c9\7_\2\2\u00c9\36\3\2\2\2\u00ca\u00cb\7}\2\2\u00cb \3"+
		"\2\2\2\u00cc\u00cd\7\177\2\2\u00cd\"\3\2\2\2\u00ce\u00cf\7>\2\2\u00cf"+
		"\u00d0\7/\2\2\u00d0$\3\2\2\2\u00d1\u00d2\7/\2\2\u00d2\u00d3\7@\2\2\u00d3"+
		"&\3\2\2\2\u00d4\u00d5\7t\2\2\u00d5\u00d6\7g\2\2\u00d6\u00d7\7v\2\2\u00d7"+
		"\u00d8\7w\2\2\u00d8\u00d9\7t\2\2\u00d9\u00da\7p\2\2\u00da(\3\2\2\2\u00db"+
		"\u00dc\7k\2\2\u00dc\u00dd\7h\2\2\u00dd*\3\2\2\2\u00de\u00df\7g\2\2\u00df"+
		"\u00e0\7n\2\2\u00e0\u00e1\7u\2\2\u00e1\u00e2\7g\2\2\u00e2,\3\2\2\2\u00e3"+
		"\u00e4\7y\2\2\u00e4\u00e5\7j\2\2\u00e5\u00e6\7k\2\2\u00e6\u00e7\7n\2\2"+
		"\u00e7\u00e8\7g\2\2\u00e8.\3\2\2\2\u00e9\u00ea\7f\2\2\u00ea\u00eb\7q\2"+
		"\2\u00eb\60\3\2\2\2\u00ec\u00ed\7h\2\2\u00ed\u00ee\7q\2\2\u00ee\u00ef"+
		"\7t\2\2\u00ef\62\3\2\2\2\u00f0\u00f1\7,\2\2\u00f1\u00f2\7,\2\2\u00f2\64"+
		"\3\2\2\2\u00f3\u00f4\7,\2\2\u00f4\66\3\2\2\2\u00f5\u00f6\7\61\2\2\u00f6"+
		"8\3\2\2\2\u00f7\u00f8\7\'\2\2\u00f8:\3\2\2\2\u00f9\u00fa\7-\2\2\u00fa"+
		"\u00fb\7-\2\2\u00fb<\3\2\2\2\u00fc\u00fd\7/\2\2\u00fd\u00fe\7/\2\2\u00fe"+
		">\3\2\2\2\u00ff\u0100\7-\2\2\u0100@\3\2\2\2\u0101\u0102\7/\2\2\u0102B"+
		"\3\2\2\2\u0103\u0104\7>\2\2\u0104\u0105\7>\2\2\u0105D\3\2\2\2\u0106\u0107"+
		"\7@\2\2\u0107\u0108\7@\2\2\u0108F\3\2\2\2\u0109\u010a\7(\2\2\u010a\u010b"+
		"\7(\2\2\u010bH\3\2\2\2\u010c\u010d\7~\2\2\u010d\u010e\7~\2\2\u010eJ\3"+
		"\2\2\2\u010f\u0110\7`\2\2\u0110\u0111\7`\2\2\u0111L\3\2\2\2\u0112\u0113"+
		"\7#\2\2\u0113N\3\2\2\2\u0114\u0115\7>\2\2\u0115\u0116\7?\2\2\u0116P\3"+
		"\2\2\2\u0117\u0118\7@\2\2\u0118\u0119\7?\2\2\u0119R\3\2\2\2\u011a\u011b"+
		"\7>\2\2\u011bT\3\2\2\2\u011c\u011d\7@\2\2\u011dV\3\2\2\2\u011e\u011f\7"+
		"?\2\2\u011f\u0120\7?\2\2\u0120X\3\2\2\2\u0121\u0122\7#\2\2\u0122\u0123"+
		"\7?\2\2\u0123Z\3\2\2\2\u0124\u0125\7?\2\2\u0125\\\3\2\2\2\u0126\u0127"+
		"\7x\2\2\u0127\u0128\7q\2\2\u0128\u0129\7k\2\2\u0129\u012a\7f\2\2\u012a"+
		"^\3\2\2\2\u012b\u012c\7d\2\2\u012c\u012d\7q\2\2\u012d\u012e\7q\2\2\u012e"+
		"\u012f\7n\2\2\u012f`\3\2\2\2\u0130\u0131\7k\2\2\u0131\u0132\7p\2\2\u0132"+
		"\u0133\7v\2\2\u0133b\3\2\2\2\u0134\u0135\7h\2\2\u0135\u0136\7n\2\2\u0136"+
		"\u0137\7q\2\2\u0137\u0138\7c\2\2\u0138\u0139\7v\2\2\u0139d\3\2\2\2\u013a"+
		"\u013b\7u\2\2\u013b\u013c\7v\2\2\u013c\u013d\7t\2\2\u013d\u013e\7k\2\2"+
		"\u013e\u013f\7p\2\2\u013f\u0140\7i\2\2\u0140f\3\2\2\2\u0141\u0145\7$\2"+
		"\2\u0142\u0144\13\2\2\2\u0143\u0142\3\2\2\2\u0144\u0147\3\2\2\2\u0145"+
		"\u0146\3\2\2\2\u0145\u0143\3\2\2\2\u0146\u0148\3\2\2\2\u0147\u0145\3\2"+
		"\2\2\u0148\u0149\7$\2\2\u0149h\3\2\2\2\u014a\u0153\7\62\2\2\u014b\u014f"+
		"\t\4\2\2\u014c\u014e\t\5\2\2\u014d\u014c\3\2\2\2\u014e\u0151\3\2\2\2\u014f"+
		"\u014d\3\2\2\2\u014f\u0150\3\2\2\2\u0150\u0153\3\2\2\2\u0151\u014f\3\2"+
		"\2\2\u0152\u014a\3\2\2\2\u0152\u014b\3\2\2\2\u0153\u0154\3\2\2\2\u0154"+
		"\u0158\7\60\2\2\u0155\u0157\t\5\2\2\u0156\u0155\3\2\2\2\u0157\u015a\3"+
		"\2\2\2\u0158\u0156\3\2\2\2\u0158\u0159\3\2\2\2\u0159j\3\2\2\2\u015a\u0158"+
		"\3\2\2\2\u015b\u0164\7\62\2\2\u015c\u0160\t\4\2\2\u015d\u015f\t\5\2\2"+
		"\u015e\u015d\3\2\2\2\u015f\u0162\3\2\2\2\u0160\u015e\3\2\2\2\u0160\u0161"+
		"\3\2\2\2\u0161\u0164\3\2\2\2\u0162\u0160\3\2\2\2\u0163\u015b\3\2\2\2\u0163"+
		"\u015c\3\2\2\2\u0164l\3\2\2\2\u0165\u0166\7v\2\2\u0166\u0167\7t\2\2\u0167"+
		"\u0168\7w\2\2\u0168\u0169\7g\2\2\u0169n\3\2\2\2\u016a\u016b\7h\2\2\u016b"+
		"\u016c\7c\2\2\u016c\u016d\7n\2\2\u016d\u016e\7u\2\2\u016e\u016f\7g\2\2"+
		"\u016fp\3\2\2\2\u0170\u0174\t\6\2\2\u0171\u0173\t\7\2\2\u0172\u0171\3"+
		"\2\2\2\u0173\u0176\3\2\2\2\u0174\u0172\3\2\2\2\u0174\u0175\3\2\2\2\u0175"+
		"r\3\2\2\2\u0176\u0174\3\2\2\2\r\2y\177\u008a\u0145\u014f\u0152\u0158\u0160"+
		"\u0163\u0174\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}