int[] function eratosthenes(limit)
{
  int[] primes;
  
  if (limit >= 2)
  {
    int[] nums;
    
    for (int i = 2; i <= limit; i++)
    {
      nums.insert(i, i);
    }
    
    int n = nums.length();
    
    for (int i = 0; i < n; i++)
    {
      int p = nums[i];
      if (p > 0)
      {
        for (int j = (p * p) - 2; j < n; j += p)
        {
          nums[j] = 0;
        }
      }
    }
    
    for (int i = 0; i < n; i++)
    {
      int p = nums[i];
      if (p > 0)
      {
        primes.insert(primes.length(), p);
      }
    }
  }
  
  return primes;
}

int function main()
{
  int n = read().toInt();
  int[] result = eratosthenes(n);
  
  for (int i = 0; i < n; i++)
  {
    println(result[i].toStr());
  }
  
  return 0;
}
